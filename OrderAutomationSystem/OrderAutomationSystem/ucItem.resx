<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="checkedBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAASWSURBVGhD7ZbZbxNXFIf90pf+F63USn2pKlWtyGYnKXYSJFAbKCrdoItK9gTowlboor4CKaht
        gCzK1iCCIll2nMRbNuxxYuI1ixM7ceIFTB0gS0nI2jOX4+iOPYHQgk2l+aQjxXd+M/c7N9d3LBIQEBAQ
        EBB4Cphv3dhz0V7VuLK28gIO8aId1e85qfihcXl1+ZG5uALyu/M0RctfqQvWf7dVNG/WhNal351yVrK8
        7Uzq+lH58ebnoglaPlIX7Zeb8PIGtHykTihPx+TiykDIkpuvKVqi5Q+qC1dMN/s/wAhBP6rPTTknWaLk
        V5PPilfaRzScXFyx33buKNCULD5OvtdjyE4rz1ik5NcTLx925vDKB/v2YYRgGDfIeOWHOxIqL+WTZ4J9
        H2KEAPJZm8hzcnHFGXaKC7QlCzHyN00fYYRgnDBmicszF6LlVcPtnFxcAflsXvkg8zFGCCCfzSffOtjO
        ycUVZ3goi0/eEDB9ghGC0cvwrnzrkCpxKz8YHpLxyK8aAsynGCEwE4wsWj7pTNpqq1O1FyPxB+SlvPJB
        436MEJgJk5RPXuFUvouR+MPKF2pL79PyUGtdvu6DGCGw8pLyzPu0PNRai7UlcUfl6PSYuEhbNh8jP9WV
        hxGCxW8Vp/+6fT5a/pq15cm/sNWO2jfgLH4RP27KT22/1DzqLHbdGUsr1h2ai5bv9HXnY4Qw4LOmZZyX
        zvHIH8DI1ql0VH8Gk8hhf1bAq/wVHI7hR9XPtexE5IXC8yofuzuWyiev83UVYIRg8dlS+eSvWq9xclsC
        Vr4YJunHyWbzNSW9lpDtJby8Abvy9ISp59IfdLt7duFl0ci0S8K7baL2/IDPIuHbNrDnObktAydCBqy8
        CSabwUnnoYlBW8j+MkYIcCLsh5OBM/HDJnp3uu+6t8HKz+L9G/K6qc5CvJ1gDdhTMs9LZ+lnQLErz8k9
        MdcDhlxooo+anG3CbbttT8IIAZo4AE1wBGSXdiwVakqnWWHqfpDXF+FthE3lLVc5uX9Nj9+QDk2MURIL
        cAwGhsMjb2OEIHcoPo80kVkhW/+yLS+SJ+Js6SZ1xRgn2AKOZD75K5ZmTu4/0+O/LoMmgpTQ30Xa0iDs
        72SMEOQO+Rfb/8iZjZJna7FtouNbjBHsAXsSj/x6bX8DJ/fU6PH17gWRACU1B0385ZoefQsjIs89z+vw
        hnVQGVK59e8v3ZgaSMfYQ/kLspkYeVP9dxh5NnT7e/aBkI+Sm4UTJgQvqFe9M5OvlXUeccIY5zf9rrpc
        IseeMOwLavjWyJvS33LuRMvXmOqO4jTPFrVXlw9ifkoyVKo/bIeywN8PqHHfzrr3OKLvXMi6xxY9xlZ9
        f8M3+Pj4oJ7UFrKClGx0eZSetmNN5qYyEIxZbbqqmdrj+Nj4ovZqSkB0MkqcLZdyXHUCY6JG85VDIMr5
        RRmpaqZmI5cQOibUbBP0f2Jc6VHFbId6859HQHiFlq9iak7i5cTS5lUfBnH2d05QMa48hsMx1Jsbvo7I
        X2aqvsfh5wO5W3FK7lGcxo+bUmmsPnXJWPnYnICAgICAgMD/G5HoH8aMd3HRhlDyAAAAAElFTkSuQmCC
</value>
  </data>
</root>