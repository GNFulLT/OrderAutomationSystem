<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pctOk.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>